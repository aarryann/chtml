//Commitment and Consistency
const path = require('path');
const HtmlWebpackPlugin = require('html-webpack-plugin');
const { CleanWebpackPlugin } = require('clean-webpack-plugin');

const listOfComponents = [
  {"handle": "Home",  "js": "/index.js"               , "html": "/index.html"},
  {"handle": "feeds", "js": "//feeds/feeds-alpine.js" , "html": "/feeds/index.html"},
  {"handle": "about", "js": "/index.js"               , "html": "/index.html"},
]

const entry = listOfComponents.reduce((entries, item) => {
	entries[item.handle] = `./lib/${item.js}`;
	return entries;
}, {});

const htmlGenerators = listOfComponents.reduce((entries, item) => {
	entries.push(new HtmlWebpackPlugin({
		inject: true,
		chunks: [item.handle],
		filename: `public/${item.html}`
	}));
	return entries;
}, []);

const config = {
	entry,
	output: {
		filename: '[name].bundle.js', // the file name would be my entry's name with a ".bundle.js" suffix
		path: path.resolve(__dirname, 'dist') // put all of the build in a dist folder
	},
	plugins: [
		new CleanWebpackPlugin(), // use the clean plugin to delete the dist folder before a build
		...htmlGenerators
	],
  /*
	devServer: {
		client: {
			progress: true,
		},
		static: {
			publicPath: path.join(__dirname, 'dist')
		},
		compress: true,
		port: 3001,
		historyApiFallback: {
			rewrites: [
				{
					from: /.*\/.html/,
					to: function (context) {
						return `${context.parsedUrl.pathname}.html`;
					}
				}
			]
		}
	}
  */
};

module.exports = config;